{"version":3,"sources":["components/AgregarCategoria.js","helpers/obtenerGifs.js","components/VistaGiftImagen.js","components/VistaGift.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AgregarCategoria","setCategoria","useState","valorInput","setValorInput","onSubmit","e","preventDefault","trim","length","categorias","find","categoria","autoComplete","type","className","name","placeholder","value","onChange","target","obtenerGifs","a","url","encodeURI","fetch","respuesta","json","data","gifs","map","img","id","title","images","downsized_large","VistaGiftImagen","imagen","src","alt","VistaGift","cargando","state","setState","useEffect","then","useFetchGifs","imagenes","max","GiftExpertApp","ReactDOM","render","document","getElementById"],"mappings":"wNAGaA,EAAmB,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAE9B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAyBA,OACI,uBAAMC,SAlBY,SAACC,GACnBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAE1BR,GAAa,SAAAS,GAGT,OAD2BA,EAAWC,MAAK,SAAAC,GAAe,OAAOA,IAAcT,KAI3E,YAAWO,GAFL,CAAEP,GAAR,mBAAsBO,OAK9BN,EAAc,MAKaS,aAAa,MAA5C,UACI,uBACIC,KAAK,OACLC,UAAU,QACVC,KAAK,mBACLC,YAAY,mBACZC,MAAOf,EACPgB,SA9Bc,SAACb,GACvBF,EAAcE,EAAEc,OAAOF,UA+BnB,wBACIJ,KAAK,SACLC,UAAU,sCAFd,sC,uBCtCCM,EAAW,uCAAG,WAAOT,GAAP,uBAAAU,EAAA,4DACR,mCACTC,EAFiB,uDACR,mCADQ,cAEkDC,UAAUZ,GAF5D,sBAGCa,MAAMF,GAHP,cAGjBG,EAHiB,gBAIFA,EAAUC,OAJR,uBAIhBC,EAJgB,EAIhBA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAIQ,EAAIG,OAAOC,gBAAgBZ,QAVhB,kBAahBM,GAbgB,4CAAH,sDCAXO,EAAkB,SAAC,GAAc,IAAbC,EAAY,EAAZA,OAC7B,OACI,sBAAKtB,UAAU,+EAAf,UACI,qBAAKuB,IAAKD,EAAOd,IAAKgB,IAAKF,EAAOJ,QAClC,4BAAII,EAAOJ,YCDVO,EAAY,SAAC,GAAiB,IAAhB5B,EAAe,EAAfA,UAGvB,ECLwB,SAACA,GAEzB,MAA0BV,mBAAS,CAC/B0B,KAAK,GACLa,UAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KAoBA,OAdAC,qBAAW,WAEPvB,EAAYT,GACPiC,MAAK,SAAAhB,GAEFc,EAAS,CACLf,KAAKC,EACLY,UAAS,SAGtB,CAAC7B,IAIG8B,EDjB0BI,CAAalC,GAAlCmC,EAAZ,EAAOnB,KAAca,EAArB,EAAqBA,SAErB,OAEI,qBAAI1B,UAAU,iDAAd,UACI,oBAAIA,UAAU,OAAd,SAAqB,4BAAIH,MACvB6B,GAAY,0BAAU1B,UAAU,+BAA+BiC,IAAI,MAAvD,iBACQ,IAApBD,EAAStC,SAAiBgC,GAAY,qBAAK1B,UAAU,0BAAf,wDAEvC,qBAAKA,UAAU,iCAAf,SAEOgC,EAASjB,KAAK,SAAAO,GACV,OAAO,cAAC,EAAD,CAAiBA,OAAQA,GAAaA,EAAOL,aEU7DiB,EA1BQ,WAInB,MAAmC/C,mBAAS,CAAC,gBAA7C,mBAAOQ,EAAP,KAAmBT,EAAnB,KAIA,OACI,qCACI,oBAAIc,UAAU,oBAAd,2BACA,uBACA,qBAAKA,UAAU,QAAf,SACI,cAAC,EAAD,CAAkBd,aAAcA,MAEpC,oBAAIc,UAAU,iCAAd,SAEQL,EAAWoB,KAAK,SAAAlB,GACZ,OAAO,cAAC,EAAD,CAAWA,UAAWA,GAAgBA,Y,YCbrEsC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.71af98b8.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const AgregarCategoria = ({setCategoria}) => {\r\n    //HOOK DEL INPUT\r\n    const [valorInput, setValorInput] = useState('');\r\n\r\n    //FUNCION PARA ACTUALIZAR VALOR DEL INPUT (PODRIA IR DIRECTO EN EL ONCHANGE)\r\n    const cambiarValorInput = (e) =>{\r\n        setValorInput(e.target.value);\r\n    }\r\n\r\n    //FUNCION MANEJAR EL SUBMIT\r\n    const manejarSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(valorInput.trim().length > 2){\r\n            //ACTUALIZAR EL HOOK CON EL LISTADO DE CATEGORIAS\r\n            setCategoria(categorias => {\r\n                //VALIDA QUE LA NUEVA CATEGORÍA NO ESTÉ INGRESADA\r\n                const encontrarCategoria = categorias.find(categoria => { return categoria === valorInput});\r\n                if(!encontrarCategoria)\r\n                    return [valorInput,...categorias]\r\n                else\r\n                    return [...categorias]\r\n            });\r\n            //ACTUALIZO VALOR DEL INPUT\r\n            setValorInput('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={manejarSubmit} autoComplete=\"off\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"input\"\r\n                name=\"nombre-categoria\"\r\n                placeholder=\"Nombre Categoria\"\r\n                value={valorInput}\r\n                onChange={cambiarValorInput}\r\n            />\r\n            <button\r\n                type=\"submit\"\r\n                className=\"button is-primary mt-2 is-fullwidth\">\r\n                    Agregar Categoría\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\n\r\n//VALIDAR QUE LA PROPIEDAD SEA UNA FUNCIÓN\r\nAgregarCategoria.propTypes = {\r\n    setCategoria: PropTypes.func\r\n}","\r\n//FUNCIÓN PARA OBTENER LOS GIFS DE LA API DE GIPHY\r\nexport const obtenerGifs = async (categoria) => {\r\n    const apiKey = 'GbaldlLEpcmkpLhMNOnCxBDSFoXe03NG';\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=${apiKey}&q=${ encodeURI(categoria) }&limit=10`;\r\n    const respuesta = await fetch(url);\r\n    const {data} = await respuesta.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images.downsized_large.url,\r\n        }\r\n    });\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const VistaGiftImagen = ({imagen}) => {\r\n    return (\r\n        <div className=\"column is-2-fullhd is-4-desktop is-6-touch animate__animated animate__fadeIn\" >\r\n            <img src={imagen.url} alt={imagen.title}/>\r\n            <p>{imagen.title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n// import { obtenerGifs } from '../helpers/obtenerGifs';\r\nimport { VistaGiftImagen } from './VistaGiftImagen';\r\n\r\nexport const VistaGift = ({categoria}) => {\r\n\r\n    //CUSTOM HOOK, SE CREA PARA HACER LA PETICIÓN HTTP EN BUSCA DE LOS GIFS SEGÚN LA CATEGORIA\r\n    const {data:imagenes,cargando} = useFetchGifs(categoria);\r\n\r\n    return (\r\n\r\n        <li className='column is-12 animate__animated animate__fadeIn'>\r\n            <h3 className=\"mb-3\"><b>{categoria}</b></h3>\r\n            { cargando && <progress className=\"progress is-small is-primary\" max=\"100\">15%</progress>}\r\n            { imagenes.length === 0 && !cargando && <div className=\"notification is-primary\">No existen imagenes para esta categoría</div>\r\n            }\r\n             <div className=\"columns is-mobile is-multiline\">\r\n                {\r\n                    imagenes.map( imagen => {\r\n                        return <VistaGiftImagen imagen={imagen} key={imagen.id}/>\r\n                    })\r\n                }\r\n            </div>\r\n        </li>\r\n    )\r\n\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { obtenerGifs } from \"../helpers/obtenerGifs\";\r\n\r\nexport const useFetchGifs = (categoria) => {\r\n    //HOOK PARA GUARDAR LA DATA Y UN ESTADO DE CARGANDO\r\n    const [state, setState] = useState({\r\n        data:[],\r\n        cargando:true,\r\n    });\r\n\r\n    //USAR EFECTO PARA SOLO CARGAR UNA VEZ O CUANDO CAMBIE LA CATEGORÍA\r\n    useEffect( ()=>{\r\n        //OBTENER LOS GIFS SEGÚN LA CATEGORIA\r\n        obtenerGifs(categoria)\r\n            .then(gifs => {\r\n                //ACTUALIZAR EL HOOK CON LA DATA\r\n                setState({\r\n                    data:gifs,\r\n                    cargando:false,\r\n                })\r\n            });\r\n    }, [categoria]);\r\n\r\n\r\n\r\n    return state;\r\n}\r\n","import { useState } from \"react\";\r\nimport { AgregarCategoria } from \"./components/AgregarCategoria\";\r\nimport { VistaGift } from \"./components/VistaGift\";\r\n\r\nconst GiftExpertApp  = () => {\r\n    // const categorias = ['Dragon Ball','One Punch','Samurai x'];\r\n\r\n    //CREAR HOOK PARA ALMACENAR CATEGORIAS Y PODER ACTUALIZARLAS\r\n    const [categorias, setCategoria] = useState(['Dragon Ball']);\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"has-text-centered\">GiftExpertApp</h2>\r\n            <hr />\r\n            <div className=\"block\">\r\n                <AgregarCategoria setCategoria={setCategoria}/>\r\n            </div>\r\n            <ul className='columns is-mobile is-multiline'>\r\n                {\r\n                    categorias.map( categoria => {\r\n                        return <VistaGift categoria={categoria} key={categoria}/>\r\n                    })\r\n                }\r\n\r\n            </ul>\r\n        </>\r\n    );\r\n};\r\nexport default GiftExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport GiftExpertApp from './GiftExpertApp';\n\nimport './index.css';\nimport './bulma.min.css';\n// const apiKey = 'GbaldlLEpcmkpLhMNOnCxBDSFoXe03NG';\n\nReactDOM.render(\n  <GiftExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}